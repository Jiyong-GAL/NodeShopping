명령어-git 정보$ git-현재 디렉토리$ pwd -현재 디렉토리의 파일 목록$ ls -al-로그 리셋$ clear-파일 소스 확인$ cat f1.txt 1.저장소 만들기-프로젝트 파일 생성$ mkdir gitfth-프로젝트 디렉토리로 이동$ cd gitfth/-현재 디렉토리를 git의 (버전) 저장소로 만듬$ git init-파일 복사$ cp f1.txt f2.txt2.git이 관리할 대상으로 파일 등록-파일 생성$ vim f1.txt [ esc | i | :wq (write+quit) ]-git이 파일을 추적하도록 명령$ git add f1.txt-프로젝트 폴더의 상태 확인$ git status3.버전 만들기(commit)-버전에 포함될 버전을 만든 사람에 대한 정보 설정(~/.gitconfig 파일에 저장되고 1번만 해주면 됨)$ git config --global user.name choi (닉네임)$ git config --global user.email chlgmldnjs131@naver.com (이메일)$ git commit$ git log4.Stage area(commit 대기 상태)git은 commit 전에 add를 꼭해야 합니다. 그 이유는 선택적으로 파일을 버전에 포함시키기 위해서 입니다.stage(commit 대기 상태) - repository(저장소)5.변경사항 확인하기-로그에서 출력되는 버전 간의 차이점을 출력하고 싶을 때$ git log -p-버전 간의 차이점을 비교할 때$ git diff '버전 id' .. '버전 id2'-git add하기 전과 add한 후의 파일 내용을 비교할 때$ git diff

